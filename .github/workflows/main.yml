# Modified from: https://gist.github.com/aagarwal1012/eb2551683d81cf47d60868ab607520b1
name: Flutter CI/CD

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          flutter-version: '2.8.1'

      # Get flutter dependencies.
      - run: flutter pub get
      
      # Build apk.
      - run: flutter build apk

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - run: echo $SHA
        env: 
          SHA: ${{ steps.short-sha.outputs.sha }}

      # Upload generated apk to the artifacts.
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SHA }}
          release_name: ${{ env.SHA }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/apk
